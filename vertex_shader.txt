#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 uv_modelspace;
layout(location = 2) in vec3 vertexNormal_modelspace;

// 输出的顶点颜色
out vec2 vertexUV;


uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;
uniform vec3 LightPosition_worldspace;

void main(){
    //gl_Position.xyz = vertexPosition_modelspace;
    //gl_Position.w = 1.0;

   	// Output position of the vertex, in clip space : MVP * position
    gl_Position = MVP * vec4(vertexPosition_modelspace, 1.0);
    vertexUV = uv_modelspace;
}
